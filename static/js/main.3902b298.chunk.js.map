{"version":3,"sources":["components/layouts/Header.js","Contexts/Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layouts/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","Test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","className","to","defaultProps","Context","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","response","this","data","value","children","Component","Contact","showContactInfo","onShowClick","onDeleteClick","a","delete","name","email","phone","Consumer","style","cursor","onClick","float","color","bind","marginRight","Contacts","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","result","history","push","EditContact","match","params","updatedContact","put","About","NotFound","Test","title","body","fetch","then","json","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.3902b298.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          {branding}\n        </Link>\n        <div className=\"\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add Contact\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App',\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React, { Component, createContext } from 'react';\nimport axios from 'axios';\n\nexport const Context = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact.id !== action.payload\n        ),\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n      };\n\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: (action) => this.setState((state) => reducer(state, action)),\n  };\n\n  async componentDidMount() {\n    const response = await axios.get(\n      'https://jsonplaceholder.typicode.com/users'\n    );\n\n    this.setState({ contacts: response.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport default Context;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Context } from '../../Contexts/Context';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false,\n  };\n\n  onShowClick = () => {\n    this.setState({\n      showContactInfo: !this.state.showContactInfo,\n    });\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\n    } catch (error) {\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Context.Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {' '}\n                {name}{' '}\n                <i\n                  style={{ cursor: 'pointer' }}\n                  className=\"fas fa-sort-down\"\n                  onClick={this.onShowClick}\n                />\n                <i\n                  className=\"fas fa-trash\"\n                  style={{\n                    cursor: 'pointer',\n                    float: 'right',\n                    color: '#DD4445',\n                  }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-edit\"\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'blue',\n                      marginRight: '10px',\n                    }}\n                  ></i>\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email : {email} </li>\n                  <li className=\"list-group-item\">Phone : {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Context.Consumer>\n    );\n  }\n}\n\nContact.defaultProps = {\n  name: 'Contact name',\n  email: 'Contact email',\n  phone: 'Contact phone',\n};\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n};\n\nexport default Contact;\n","import React, { Component, Fragment } from 'react';\nimport Contact from './Contact';\nimport { Context } from '../../Contexts/Context';\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Context.Consumer>\n        {(value) => {\n          const { contacts } = value;\n          return (\n            <Fragment>\n              <h1 className=\"display-4 mb-2\">\n                Contact <span className=\"text-danger\"> List </span>\n              </h1>\n              {contacts.map((contact) => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </Fragment>\n          );\n        }}\n      </Context.Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  type,\n  placeholder,\n  onChange,\n  error,\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}> {label} : </label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control', { 'is-invalid': error })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired,\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text',\n  error: '',\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Context } from '../../Contexts/Context';\nimport TextInputGroup from '../layouts/TextInputGroup';\nimport axios from 'axios';\n// import { v4 as uuidv4 } from 'uuid';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {},\n  };\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n    // Check for errors\n    if (name === '') {\n      this.setState({\n        errors: { name: 'Name is required' },\n      });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({\n        errors: { email: 'Email is required' },\n      });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({\n        errors: { phone: 'Phone is required' },\n      });\n      return;\n    }\n\n    const newContact = {\n      // id: uuidv4(),\n      name,\n      email,\n      phone,\n    };\n\n    const result = await axios.post(\n      'https://jsonplaceholder.typicode.com/users/',\n      newContact\n    );\n\n    dispatch({ type: 'ADD_CONTACT', payload: result.data });\n\n    // Clear the state\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {},\n    });\n\n    this.props.history.push('/');\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Context.Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email\"\n                    type=\"email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-light btn-block\"\n                    value=\"Add Contact\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Context.Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport { Context } from '../../Contexts/Context';\nimport TextInputGroup from '../layouts/TextInputGroup';\nimport axios from 'axios';\n\n// import { v4 as uuidv4 } from 'uuid';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {},\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const result = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = result.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone,\n    });\n  }\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n    // Check for errors\n    if (name === '') {\n      this.setState({\n        errors: { name: 'Name is required' },\n      });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({\n        errors: { email: 'Email is required' },\n      });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({\n        errors: { phone: 'Phone is required' },\n      });\n      return;\n    }\n\n    const { id } = this.props.match.params;\n\n    const updatedContact = {\n      name,\n      email,\n      phone,\n    };\n\n    const result = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updatedContact\n    );\n\n    dispatch({ type: 'UPDATE_CONTACT', payload: result.data });\n\n    // Clear the state\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {},\n    });\n\n    this.props.history.push('/');\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Context.Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email\"\n                    type=\"email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-light btn-block\"\n                    value=\"Update Contact\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Context.Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from 'react';\n\nfunction About() {\n  return (\n    <div className=\"container\">\n      <h1 className=\"display-3\"> About Contact Manager</h1>\n      <p className=\"lead\">Simple App to manage contacts</p>\n      <p>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Dicta illum\n        consequuntur eos nemo suscipit ea, molestias unde aspernatur repellendus\n        quos beatae quibusdam quisquam et fugiat nesciunt eaque error labore\n        tempora.\n      </p>\n      <p className=\"secondary\">Version 1.0.0</p>\n    </div>\n  );\n}\n\nexport default About;\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        {' '}\n        <span className=\"text-danger\">404</span> Not Found\n      </h1>\n      <p>Sorry, that page does not exist.</p>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React, { Component } from 'react';\n\nexport default class Test extends Component {\n  state = {\n    title: '',\n    body: '',\n  };\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/posts/10')\n      .then((response) => response.json())\n      .then((data) =>\n        this.setState({\n          title: data.title,\n          body: data.body,\n        })\n      );\n  }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1> Test Component </h1>\n        <p>{title}</p>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/layouts/Header';\nimport Contacts from './components/contacts/Contacts';\nimport { Provider } from './Contexts/Context';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './Test/Test';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}